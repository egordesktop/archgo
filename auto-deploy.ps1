# ===============================
# –ü–û–õ–ù–ê–Ø –ê–í–¢–û–ù–ê–°–¢–†–û–ô–ö–ê VERCEL –î–ï–ü–õ–û–Ø + –ê–í–¢–û–í–ï–¢–ö–ê + –ê–í–¢–û–û–¢–ö–†–´–¢–ò–ï
# ===============================

Write-Host "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub CLI ===" -ForegroundColor Green
try {
    gh --version
    Write-Host "‚úÖ GitHub CLI –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ùå GitHub CLI –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ PATH –ø–µ—Ä–µ–¥ –∑–∞–ø—É—Å–∫–æ–º." -ForegroundColor Red
    Write-Host "–°–∫–∞—á–∞–π—Ç–µ —Å: https://cli.github.com/" -ForegroundColor Yellow
    exit 1
}

Write-Host "=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è Vercel ===" -ForegroundColor Green
$env:VERCEL_TOKEN = "Pm1LQvzpaIGt1cGSsvk975Et"
$env:VERCEL_TEAM_ID = "team_e6nD07t8aV61vAQqMIqzEYRk"
$env:VERCEL_PROJECT_ID = "prj_RW2Df5XteE00YC94JpgPGJvgj9HU0"

# –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
"VERCEL_TOKEN=$env:VERCEL_TOKEN" | Out-File -Encoding UTF8 -FilePath .env
"VERCEL_TEAM_ID=$env:VERCEL_TEAM_ID" | Out-File -Encoding UTF8 -Append .env
"VERCEL_PROJECT_ID=$env:VERCEL_PROJECT_ID" | Out-File -Encoding UTF8 -Append .env
Write-Host "‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è" -ForegroundColor Green

Write-Host "=== –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json ===" -ForegroundColor Green
if (Test-Path "package.json") {
    $package = Get-Content "package.json" -Raw | ConvertFrom-Json
    $updated = $false
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç start –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (-Not $package.scripts.start) {
        $package.scripts.start = "vercel dev"
        $updated = $true
    }
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç deploy —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    if ($package.scripts.deploy) {
        $package.scripts.deploy = "vercel --prod --token $env:VERCEL_TOKEN --scope $env:VERCEL_TEAM_ID"
        $updated = $true
    }
    
    if ($updated) {
        $package | ConvertTo-Json -Depth 10 | Out-File -Encoding UTF8 "package.json"
        Write-Host "‚úÖ package.json –æ–±–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ÑπÔ∏è package.json —É–∂–µ —Å–æ–¥–µ—Ä–∂–∏—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Å–∫—Ä–∏–ø—Ç—ã" -ForegroundColor Yellow
    }
} else {
    Write-Host "‚ùå –§–∞–π–ª package.json –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
    exit 1
}

Write-Host "=== –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ vercel.json ===" -ForegroundColor Green
$vercelConfig = @{
    version = 2
    scope = $env:VERCEL_TEAM_ID
    projectId = $env:VERCEL_PROJECT_ID
    buildCommand = "npm run build"
    outputDirectory = "dist"
    installCommand = "npm install"
    framework = "vite"
    rewrites = @(
        @{ source = "/(.*)"; destination = "/index.html" }
    )
}

$vercelConfig | ConvertTo-Json -Depth 10 | Out-File -Encoding UTF8 "vercel.json"
Write-Host "‚úÖ vercel.json –æ–±–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green

Write-Host "=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ GitHub Secrets ===" -ForegroundColor Green
try {
    gh secret set VERCEL_TOKEN --body $env:VERCEL_TOKEN
    gh secret set VERCEL_TEAM_ID --body $env:VERCEL_TEAM_ID
    gh secret set VERCEL_PROJECT_ID --body $env:VERCEL_PROJECT_ID
    Write-Host "‚úÖ GitHub Secrets –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ GitHub Secrets. –í–æ–∑–º–æ–∂–Ω–æ, —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω." -ForegroundColor Yellow
    Write-Host "–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ GitHub CLI: gh auth login" -ForegroundColor Yellow
}

Write-Host "=== –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –≤–µ—Ç–∫–∏ ===" -ForegroundColor Green
try {
    $branchName = git rev-parse --abbrev-ref HEAD
    Write-Host "–¢–µ–∫—É—â–∞—è –≤–µ—Ç–∫–∞: $branchName" -ForegroundColor Cyan
} catch {
    Write-Host "‚ùå Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω" -ForegroundColor Red
    Write-Host "–í—ã–ø–æ–ª–Ω–∏—Ç–µ: git init && git add . && git commit -m 'Initial commit'" -ForegroundColor Yellow
    exit 1
}

Write-Host "=== –°–æ–∑–¥–∞–Ω–∏–µ GitHub Actions workflow ===" -ForegroundColor Green
if (-Not (Test-Path ".github/workflows")) {
    New-Item -ItemType Directory -Path ".github/workflows" -Force | Out-Null
}

$workflowContent = @"
name: Deploy to Vercel

on:
  push:
    branches: [ $branchName, main, master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build project
      run: npm run build
      
    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: `${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: `${{ secrets.VERCEL_TEAM_ID }}
        vercel-project-id: `${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'
"@

$workflowContent | Out-File -Encoding UTF8 ".github/workflows/deploy.yml"
Write-Host "‚úÖ GitHub Actions workflow —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green

Write-Host "=== –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Vercel CLI ===" -ForegroundColor Green
try {
    npm install -g vercel
    Write-Host "‚úÖ Vercel CLI —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ Vercel CLI. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—Ä—É—á–Ω—É—é: npm install -g vercel" -ForegroundColor Yellow
}

Write-Host "=== Git commit & push ===" -ForegroundColor Green
try {
    git add .
    git commit -m "Setup GitHub Actions and Vercel deployment configuration" --allow-empty
    git push origin $branchName
    Write-Host "‚úÖ –ò–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–∫–æ–º–º–∏—á–µ–Ω—ã –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ git push. –í–æ–∑–º–æ–∂–Ω–æ, —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è push." -ForegroundColor Yellow
    Write-Host "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ remote: git remote add origin <your-repo-url>" -ForegroundColor Yellow
}

Write-Host "=== –ü–µ—Ä–≤—ã–π –¥–µ–ø–ª–æ–π –Ω–∞–ø—Ä—è–º—É—é –≤ Vercel ===" -ForegroundColor Green
try {
    Write-Host "–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–µ–ø–ª–æ–π..." -ForegroundColor Yellow
    $deployOutput = vercel --prod --confirm --token $env:VERCEL_TOKEN --scope $env:VERCEL_TEAM_ID 2>&1
    
    Write-Host "–í—ã–≤–æ–¥ –¥–µ–ø–ª–æ—è:" -ForegroundColor Cyan
    Write-Host $deployOutput -ForegroundColor White
    
    # –ü–æ–∏—Å–∫ URL —Å–∞–π—Ç–∞ –≤ –≤—ã–≤–æ–¥–µ
    if ($deployOutput -match "https://[^\s]+\.vercel\.app") {
        $siteUrl = $matches[0]
        Write-Host "‚úÖ –°–∞–π—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–¥–µ–ø–ª–æ–µ–Ω: $siteUrl" -ForegroundColor Green
        
        Write-Host "=== –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å–∞–π—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ ===" -ForegroundColor Green
        try {
            Start-Process $siteUrl
            Write-Host "‚úÖ –°–∞–π—Ç –æ—Ç–∫—Ä—ã—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ" -ForegroundColor Green
        } catch {
            Write-Host "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Å–∞–π—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏. –û—Ç–∫—Ä–æ–π—Ç–µ –≤—Ä—É—á–Ω—É—é: $siteUrl" -ForegroundColor Yellow
        }
    } else {
        Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç –≤ –≤—ã–≤–æ–¥–µ –¥–µ–ø–ª–æ—è" -ForegroundColor Red
        Write-Host "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤—ã–≤–æ–¥ –≤—ã—à–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è URL" -ForegroundColor Yellow
    }
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–µ–ø–ª–æ–µ –≤ Vercel" -ForegroundColor Red
    Write-Host "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ç–æ–∫–µ–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Vercel" -ForegroundColor Yellow
}

Write-Host "=== –°–æ–∑–¥–∞–Ω–∏–µ .gitignore ===" -ForegroundColor Green
if (-Not (Test-Path ".gitignore")) {
    @"
# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build outputs
dist/
build/
.vercel/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# IDE
.vscode/
.idea/
*.swp
*.swo

# OS
.DS_Store
Thumbs.db

# Logs
logs
*.log

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity
"@ | Out-File -Encoding UTF8 ".gitignore"
    Write-Host "‚úÖ .gitignore —Å–æ–∑–¥–∞–Ω" -ForegroundColor Green
}

Write-Host "`n" -ForegroundColor White
Write-Host "üéâ –ù–ê–°–¢–†–û–ô–ö–ê –ó–ê–í–ï–†–®–ï–ù–ê!" -ForegroundColor Green
Write-Host "================================" -ForegroundColor Cyan
Write-Host "‚úÖ Vercel –¥–µ–ø–ª–æ–π –Ω–∞—Å—Ç—Ä–æ–µ–Ω" -ForegroundColor Green
Write-Host "‚úÖ GitHub Actions –Ω–∞—Å—Ç—Ä–æ–µ–Ω" -ForegroundColor Green
Write-Host "‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –ø—Ä–∏ push" -ForegroundColor Green
Write-Host "‚úÖ –°–∞–π—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç–∫—Ä—ã—Ç –≤ –±—Ä–∞—É–∑–µ—Ä–µ" -ForegroundColor Green
Write-Host "`n–î–ª—è —Å–ª–µ–¥—É—é—â–∏—Ö –¥–µ–ø–ª–æ–µ–≤ –ø—Ä–æ—Å—Ç–æ –¥–µ–ª–∞–π—Ç–µ:" -ForegroundColor Yellow
Write-Host "git add . && git commit -m 'your message' && git push" -ForegroundColor Cyan
Write-Host "================================" -ForegroundColor Cyan
